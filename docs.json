[
    {
        "method": "delete",
        "route": "/dashboard/autorole",
        "meta": {
            "description": "Deletes an automatically assigned role from the server.",
            "body": null,
            "query": {
                "role": {
                    "description": "The role ID to delete.",
                    "type": "string",
                    "required": true
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "Successfully deleted autorole"
                    }
                ],
                "400": [
                    {
                        "type": "string",
                        "example": "Missing required parameter 'role'."
                    }
                ],
                "500": [
                    {
                        "type": "string",
                        "example": "Failed to delete autorole, are you sure it exists?"
                    }
                ]
            },
            "comment": "Deleted autorole"
        },
        "type": "Dashboard"
    },
    {
        "method": "delete",
        "route": "/dashboard/database",
        "meta": {
            "description": "Delete a item from managed storage",
            "body": null,
            "query": {
                "path": {
                    "description": "The path of the file to remove (relative to guild root)",
                    "type": "string",
                    "required": false
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "success"
                    }
                ],
                "400": [
                    {
                        "type": "string",
                        "example": "File not found"
                    }
                ]
            },
            "comment": "Deleted data"
        },
        "type": "Dashboard"
    },
    {
        "method": "delete",
        "route": "/dashboard/events/variables",
        "meta": {
            "description": "Remove a variable from an event",
            "body": null,
            "query": {
                "scope": {
                    "description": "The scope of the event. Can be either \"global\" or a event ID.",
                    "type": "string",
                    "required": true
                },
                "name": {
                    "description": "The name of the variable to delete.",
                    "type": "string",
                    "required": true
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "success"
                    }
                ],
                "400": [
                    {
                        "type": "string",
                        "example": "Missing required parameters."
                    }
                ],
                "403": [
                    {
                        "type": "string",
                        "example": "You do not have permission to modify this event."
                    }
                ],
                "404": [
                    {
                        "type": "string",
                        "example": "Event not found."
                    }
                ],
                "500": [
                    {
                        "type": "string",
                        "example": "Failed to delete variable, are you sure it exists?"
                    }
                ]
            },
            "comment": "Deleted event variable"
        },
        "type": "Dashboard"
    },
    {
        "method": "delete",
        "route": "/dashboard/events",
        "meta": {
            "description": "Deletes a event given the event ID",
            "body": null,
            "query": {
                "id": {
                    "description": "The event ID to delete",
                    "type": "string",
                    "required": true
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "Successfully deleted event"
                    }
                ],
                "400": [
                    {
                        "type": "string",
                        "example": "Missing required parameter 'event'."
                    }
                ],
                "404": [
                    {
                        "type": "string",
                        "example": "Event not found"
                    }
                ]
            },
            "comment": "Deleted event"
        },
        "type": "Dashboard"
    },
    {
        "method": "delete",
        "route": "/dashboard/xp/reward",
        "meta": {
            "description": "Delete a reward for reaching a certain level",
            "body": null,
            "query": {
                "level": {
                    "type": "string",
                    "description": "The level of the reward to remove",
                    "required": true
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "success"
                    }
                ]
            },
            "comment": "Deleted XP reward"
        },
        "type": "Dashboard"
    },
    {
        "method": "get",
        "route": "/dashboard/activity",
        "meta": {
            "description": "Get the latest actions performed through the API for the server. (excl. GET Requests)",
            "body": null,
            "query": {
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "Array<{ method: string, route: string, ts: number, executor: string, comment: string }>",
                        "example": null
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "get",
        "route": "/dashboard/auth/test",
        "meta": {
            "description": "Test if the current auth token is valid",
            "body": {},
            "query": {
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "Pong!"
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "get",
        "route": "/dashboard/autorole",
        "meta": {
            "description": "Get the current automatically granted roles",
            "body": null,
            "query": {
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "Array<string>",
                        "example": null
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "get",
        "route": "/dashboard/database",
        "meta": {
            "description": "Get a file from the servers managed storage",
            "body": null,
            "query": {
                "path": {
                    "description": "The path of the file to delete (relative to managed guild root)",
                    "type": "string",
                    "required": true
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": null
                    }
                ],
                "404": [
                    {
                        "type": "string",
                        "example": "File not found"
                    }
                ],
                "500": [
                    {
                        "type": "string",
                        "example": "Internal server error during file read"
                    },
                    {
                        "type": "string",
                        "example": "Internal server error"
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "get",
        "route": "/dashboard/events/code",
        "meta": {
            "description": "Read the code of a event",
            "body": null,
            "query": {
                "id": {
                    "description": "The ID of the event to get the code of",
                    "type": "string",
                    "required": true
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": null
                    }
                ],
                "404": [
                    {
                        "type": "string",
                        "example": "Event not found (are you sure you have permission to edit it?)"
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "get",
        "route": "/dashboard/events/variable",
        "meta": {
            "description": "Get variables for events by scope",
            "body": null,
            "query": {
                "scope": {
                    "description": "The scope of the variable to get",
                    "type": "string",
                    "required": true
                },
                "name": {
                    "description": "The name of the variable to get",
                    "type": "string",
                    "required": false
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "Array<{ name: string, value: string }>",
                        "example": "[{\"name\":\"variable\",\"value\":\"value\"}]"
                    }
                ],
                "404": [
                    {
                        "type": "string",
                        "example": "Variable not found"
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "get",
        "route": "/dashboard/events",
        "meta": {
            "description": "Get events from the current server",
            "body": null,
            "query": {
                "id": {
                    "description": "The ID of the event to get data on",
                    "type": "string",
                    "required": false
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "Array<{ id: string, name: string, description: string, on: string, guild: string, enabled: boolean }>",
                        "example": "[{\"id\":\"x-xxxxx-xxxxx-xxxxx\",\"guild\":\"[Guild ID]\",\"on\":\"messageCreate\",\"name\":\"Dummy event\",\"description\":\"This is a dummy event\",\"enabled\":true}]"
                    }
                ],
                "404": [
                    {
                        "type": "string",
                        "example": "Event not found"
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "get",
        "route": "/dashboard/guild",
        "meta": {
            "description": "Get data for current guild",
            "body": null,
            "query": {
                "filter": {
                    "description": "Data to filter by",
                    "type": "Array<'members' | 'channels' | 'basic' | 'roles'>",
                    "required": false
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "object",
                        "example": null
                    }
                ],
                "400": [
                    {
                        "type": "string",
                        "example": "Filter must be a (JSON) array"
                    }
                ],
                "404": [
                    {
                        "type": "string",
                        "example": "Guild not found"
                    }
                ],
                "500": [
                    {
                        "type": "string",
                        "example": "getGuildData returned null"
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "get",
        "route": "/dashboard/logs/channel",
        "meta": {
            "description": "Gets the current channel logs are sent to",
            "body": null,
            "query": {
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": null
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "get",
        "route": "/dashboard/logs/state",
        "meta": {
            "description": "Checks the current state of a gateway event in the logging system",
            "body": null,
            "query": {
                "event": {
                    "description": "The event to check the state of",
                    "type": "string",
                    "example": "messageDelete",
                    "required": false
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "boolean",
                        "example": null
                    },
                    {
                        "type": "Array<{ name: string, value: any }>",
                        "example": null
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "get",
        "route": "/dashboard/xp/rewards",
        "meta": {
            "description": "Get all the rewards for a guild",
            "body": null,
            "query": {
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "Array<{ level: string, reward: string }>",
                        "example": "[{\"level\":\"1\",\"reward\":\"[Role ID]\"},{\"level\":\"2\",\"reward\":\"[Role ID]\"}]"
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "get",
        "route": "/dashboard/xp/user",
        "meta": {
            "description": "Gets the current XP for a member",
            "body": null,
            "query": {
                "user": {
                    "type": "string",
                    "description": "The user to get the XP for",
                    "required": false
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "number",
                        "example": "1234"
                    },
                    {
                        "type": "Array<{ user: string, xp: number }>",
                        "example": "[{ user: \"123456789012345678\", xp: 1234 }]"
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "post",
        "route": "/dashboard/autorole",
        "meta": {
            "description": "Adds a new automatically granted role",
            "body": null,
            "query": {
                "role": {
                    "type": "string",
                    "description": "The role to add",
                    "required": true
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "success"
                    }
                ],
                "400": [
                    {
                        "type": "string",
                        "example": "Role already exists"
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "post",
        "route": "/dashboard/config",
        "meta": {
            "description": "Modifies a config value",
            "body": null,
            "query": {
                "category": {
                    "type": "string",
                    "description": "The category of the config to modify",
                    "required": true
                },
                "key": {
                    "type": "string",
                    "description": "The key of the config to modify",
                    "required": true
                },
                "value": {
                    "type": "string",
                    "description": "The value to set",
                    "required": true
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "success"
                    }
                ],
                "400": [
                    {
                        "type": "string",
                        "example": "Missing category, key or value"
                    }
                ],
                "404": [
                    {
                        "type": "string",
                        "example": "Config not found"
                    }
                ]
            },
            "comment": "changed a config value"
        },
        "type": "Dashboard"
    },
    {
        "method": "post",
        "route": "/dashboard/database",
        "meta": {
            "description": "Makes a managed db entry",
            "body": {
                "path": {
                    "type": "string",
                    "description": "The path to the file to write to",
                    "required": true
                },
                "data": {
                    "type": "string",
                    "description": "The data to write to the file",
                    "required": true
                }
            },
            "query": {
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "success"
                    }
                ],
                "400": [
                    {
                        "type": "string",
                        "example": "Invalid path"
                    }
                ]
            },
            "comment": "wrote a string to a file in the managed db"
        },
        "type": "Dashboard"
    },
    {
        "method": "post",
        "route": "/dashboard/events/code",
        "meta": {
            "description": "Modifies the code of a event.",
            "body": {
                "data": {
                    "type": "string",
                    "description": "The code to write",
                    "required": true
                }
            },
            "query": {
                "id": {
                    "type": "string",
                    "description": "The id of the event to modify",
                    "required": true
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {},
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "post",
        "route": "/dashboard/events/state",
        "meta": {
            "description": "Sets the state of a event",
            "body": null,
            "query": {
                "event": {
                    "type": "string",
                    "description": "The event to set the state of",
                    "required": true
                },
                "state": {
                    "type": "boolean",
                    "description": "The state to set the event to",
                    "required": true
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "success"
                    }
                ],
                "400": [
                    {
                        "type": "string",
                        "example": "Missing event or state query parameter"
                    },
                    {
                        "type": "string",
                        "example": "State must be 'true' or 'false'"
                    }
                ],
                "403": [
                    {
                        "type": "string",
                        "example": "You do not have permission to modify this event"
                    }
                ],
                "404": [
                    {
                        "type": "string",
                        "example": "Event not found"
                    }
                ]
            },
            "comment": "changed the state of an event"
        },
        "type": "Dashboard"
    },
    {
        "method": "post",
        "route": "/dashboard/events/variables",
        "meta": {
            "description": "Change a value of a variable in a event scope",
            "body": {
                "data": {
                    "type": "string",
                    "description": "The value to set",
                    "required": true
                }
            },
            "query": {
                "scope": {
                    "type": "'global' | '[EVENT_ID]'",
                    "description": "The scope of the variable to modify",
                    "required": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable to modify",
                    "required": true
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "success"
                    }
                ],
                "400": [
                    {
                        "type": "string",
                        "example": "Missing scope, name or data"
                    }
                ],
                "403": [
                    {
                        "type": "string",
                        "example": "You do not have permission to modify this event"
                    }
                ],
                "404": [
                    {
                        "type": "string",
                        "example": "Event not found"
                    }
                ]
            },
            "comment": "changed a event variable value"
        },
        "type": "Dashboard"
    },
    {
        "method": "post",
        "route": "/dashboard/events",
        "meta": {
            "description": "Creates a new event",
            "body": null,
            "query": {
                "on": {
                    "type": "string",
                    "description": "The event to listen to",
                    "required": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the event",
                    "required": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the event",
                    "required": true
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "object",
                        "example": "{\n                id: '123456789012345678',\n                guild: '123456789012345678',\n                on: 'messageCreate',\n                name: 'My Event',\n                description: 'This is my event',\n                enabled: true\n            }"
                    }
                ],
                "400": [
                    {
                        "type": "string",
                        "example": "Missing required parameters"
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "post",
        "route": "/dashboard/logs/channel",
        "meta": {
            "description": "Sets the channel that events will be logged to",
            "body": null,
            "query": {
                "channel": {
                    "type": "string",
                    "description": "The ID of the channel to log events to",
                    "required": true
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "Success."
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "post",
        "route": "/dashboard/logs/state",
        "meta": {
            "description": "Changes the state of a gateway events logging",
            "body": null,
            "query": {
                "event": {
                    "type": "string",
                    "description": "The gateway event to change the state of",
                    "required": true,
                    "example": "guildMemberAdd"
                },
                "state": {
                    "type": "boolean",
                    "description": "The new state of the event logging",
                    "required": true,
                    "example": "true"
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "Success."
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "post",
        "route": "/dashboard/messages",
        "meta": {
            "description": "Sends a message to a specific channel",
            "body": {
                "data": {
                    "type": "MessagePayload",
                    "description": "The message payload to send (discord.js message object)",
                    "required": true
                }
            },
            "query": {
                "channel": {
                    "type": "string",
                    "description": "The channel to send the message to",
                    "required": true
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the message to edit (use message_reference if you want to reply to a message)",
                    "required": false
                },
                "webhook": {
                    "type": "string",
                    "description": "The ID of the webhook to use for sending the message (/webhook list)",
                    "required": false
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "success"
                    }
                ]
            },
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "post",
        "route": "/dashboard/xp/rewards",
        "meta": {
            "description": "Add a reward for reaching a certain XP level",
            "body": {
                "level": {
                    "type": "number",
                    "description": "The level to trigger the reward",
                    "required": true
                },
                "value": {
                    "type": "string",
                    "description": "The value of the reward (only role id for now)",
                    "required": true
                }
            },
            "query": {
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {},
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "post",
        "route": "/dashboard/xp",
        "meta": {
            "description": "Sets a users XP (1000 XP = 1 level)",
            "body": null,
            "query": {
                "user": {
                    "type": "string",
                    "description": "The user to set the XP for",
                    "required": true
                },
                "xp": {
                    "type": "number",
                    "description": "The amount of XP to set the user to",
                    "required": true
                },
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to perform the action on",
                    "required": true
                }
            },
            "authorization": "None",
            "returns": {},
            "comment": null
        },
        "type": "Dashboard"
    },
    {
        "method": "get",
        "route": "/guilds/lookup",
        "meta": {
            "description": "Lookup a guild by its ID (Specific users only)",
            "body": null,
            "query": {
                "guild": {
                    "type": "string",
                    "description": "The ID of the guild to lookup",
                    "required": true
                }
            },
            "authorization": "User",
            "returns": {},
            "comment": null
        },
        "type": "Public"
    },
    {
        "method": "get",
        "route": "/guilds/mutual",
        "meta": {
            "description": "Get mutual guilds between the bot and the current user.",
            "body": null,
            "query": null,
            "authorization": "User",
            "returns": {},
            "comment": null
        },
        "type": "Public"
    },
    {
        "method": "get",
        "route": "/guilds",
        "meta": {
            "description": "Get all guilds the bot is in (Specific users only)",
            "body": null,
            "query": null,
            "authorization": "User",
            "returns": {},
            "comment": null
        },
        "type": "Public"
    },
    {
        "method": "get",
        "route": "/ping",
        "meta": {
            "description": "Checks if the server is alive",
            "body": null,
            "query": null,
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "pong"
                    }
                ]
            },
            "comment": null
        },
        "type": "Public"
    },
    {
        "method": "get",
        "route": "/stats",
        "meta": {
            "description": "Get statistics and analytics collected by the bot",
            "body": null,
            "query": null,
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "object",
                        "example": "{\n    message_counts: {\n        month: number,\n        day: number,\n        lifetime: number\n    },\n    bot: {\n        user_count: number,\n        guild_count: number,\n        channel_count: number,\n    },\n    resType: 'fresh' | 'cached'\n}"
                    }
                ]
            },
            "comment": null
        },
        "type": "Public"
    },
    {
        "method": "get",
        "route": "/uptime",
        "meta": {
            "description": "Get the uptime of the client within the API",
            "body": null,
            "query": null,
            "authorization": "None",
            "returns": {},
            "comment": null
        },
        "type": "Public"
    },
    {
        "method": "get",
        "route": "/users/current",
        "meta": {
            "description": "Returns the data of the current user",
            "body": null,
            "query": null,
            "authorization": "User",
            "returns": {},
            "comment": null
        },
        "type": "Public"
    },
    {
        "method": "post",
        "route": "/auth/guild",
        "meta": {
            "description": "Add or override a guild key",
            "body": null,
            "query": {
                "guild": {
                    "description": "The guild ID to generate the key for",
                    "type": "string",
                    "required": true
                }
            },
            "authorization": "Locked",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "The new key"
                    }
                ],
                "400": [
                    {
                        "type": "string",
                        "example": "Invalid or missing token in request body"
                    }
                ]
            },
            "comment": null
        },
        "type": "Internal"
    },
    {
        "method": "post",
        "route": "/auth/user",
        "meta": {
            "description": "Add or override a users access token in the database",
            "body": {
                "token": {
                    "description": "The new token to apply to the user",
                    "type": "string",
                    "required": true
                }
            },
            "query": null,
            "authorization": "Locked",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "Success"
                    }
                ],
                "400": [
                    {
                        "type": "string",
                        "example": "Invalid token"
                    }
                ]
            },
            "comment": null
        },
        "type": "Internal"
    },
    {
        "method": "post",
        "route": "/ping",
        "meta": {
            "description": "Description of the route",
            "body": null,
            "query": null,
            "authorization": "None",
            "returns": {
                "200": [
                    {
                        "type": "string",
                        "example": "pong"
                    }
                ]
            },
            "comment": null
        },
        "type": "Public"
    },
    {
        "method": "post",
        "route": "/render/transcript",
        "meta": {
            "description": "Pass request through to TicketsBot/Discord-chat-replica service (see their docs)",
            "body": null,
            "query": null,
            "authorization": "None",
            "returns": {},
            "comment": null
        },
        "type": "Public"
    },
    {
        "method": "post",
        "route": "/update",
        "meta": {
            "description": "Update and restart the API to the latest commit.",
            "body": null,
            "query": null,
            "authorization": "CI",
            "returns": {},
            "comment": null
        },
        "type": "Public"
    }
]