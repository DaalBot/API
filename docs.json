{
    "release": "556d58c088172359",
    "routes": [
        {
            "path": "routes/dashboard/delete/autorole/remove.js",
            "description": "Removes an autorole from a guild.",
            "method": "DELETE",
            "route": "/dashboard/autorole/remove",
            "params": {
                "guild": "ID of the guild",
                "role": "ID of the role to remove"
            },
            "restricted": true,
            "sort": 2
        },
        {
            "path": "routes/dashboard/delete/config/remove.js",
            "description": "Removes a configuration setting from a guild.",
            "method": "DELETE",
            "route": "/dashboard/config/remove",
            "params": {
                "guild": "ID of the guild",
                "category": "Category of the configuration"
            },
            "restricted": true,
            "sort": 2
        },
        {
            "path": "routes/dashboard/delete/database/remove.js",
            "description": "Removes a database entry for a guild.",
            "method": "DELETE",
            "route": "/dashboard/database/remove",
            "params": {
                "guild": "ID of the guild",
                "file": "File to remove"
            },
            "restricted": true,
            "sort": 2
        },
        {
            "path": "routes/dashboard/delete/events/remove.js",
            "description": "Removes an event by ID.",
            "method": "DELETE",
            "route": "/dashboard/events/remove",
            "params": {
                "id": "ID of the event to remove"
            },
            "restricted": true,
            "sort": 2
        },
        {
            "path": "routes/dashboard/delete/xp/reward.js",
            "description": "Removes an XP reward from a guild.",
            "method": "DELETE",
            "route": "/dashboard/xp/reward",
            "params": {
                "guild": "ID of the guild",
                "reward": "ID of the reward to remove"
            },
            "restricted": true,
            "sort": 2
        },
        {
            "path": "routes/dashboard/delete/events/variables.js",
            "description": "Removes a variable for an event or guild.",
            "method": "DELETE",
            "route": "/dashboard/events/variables",
            "params": {
                "scope": "ID of the event or \"global\" for global variables",
                "name": "The name of the variable to remove"
            },
            "restricted": true,
            "sort": 2
        },
        {
            "path": "routes/dashboard/get/activity/latest.js",
            "description": "Gets the latest activity for a guild.",
            "method": "GET",
            "route": "/dashboard/activity/latest",
            "params": {
                "guild": "ID of the guild"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/analytics/data.js",
            "description": "Gets analytics data for a guild and channel.",
            "method": "GET",
            "route": "/dashboard/analytics/data",
            "params": {
                "guild": "ID of the guild",
                "channel": "ID of the channel"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/autorole/current.js",
            "description": "Gets the current autorole settings for a guild.",
            "method": "GET",
            "route": "/dashboard/autorole/current",
            "params": {
                "guild": "ID of the guild"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/config/alertChannel.js",
            "description": "Gets the alert channel configuration for a guild.",
            "method": "GET",
            "route": "/dashboard/config/alertChannel",
            "params": {
                "guild": "ID of the guild"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/config/read.js",
            "description": "Reads the configuration settings for a guild.",
            "method": "GET",
            "route": "/dashboard/config/read",
            "params": {
                "guild": "ID of the guild",
                "category": "Category of the configuration"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/database/readDir.js",
            "description": "Reads the directory of a database for a guild.",
            "method": "GET",
            "route": "/dashboard/database/readDir",
            "params": {
                "path": "Path to the directory",
                "category": "Category of the database"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/database/read.js",
            "description": "Reads a database entry for a guild.",
            "method": "GET",
            "route": "/dashboard/database/read",
            "params": {
                "path": "Path to the database entry"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/events/entires.js",
            "description": "Gets entries of an event by ID.",
            "method": "GET",
            "route": "/dashboard/events/entires",
            "params": {
                "id": "ID of the event"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/events/read.js",
            "description": "Reads an event by ID.",
            "method": "GET",
            "route": "/dashboard/events/read",
            "params": {
                "id": "ID of the event"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/events/variables.js",
            "description": "Gets variables for events in a guild.",
            "method": "GET",
            "route": "/dashboard/events/variables",
            "params": {
                "guild": "ID of the guild",
                "scope": "The scope of the variables (\"global\" or event ID)"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/guilds/channels.js",
            "description": "Gets channels of a guild.",
            "method": "GET",
            "route": "/dashboard/guilds/channels",
            "params": {
                "guild": "ID of the guild"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/guilds/guild.js",
            "description": "Gets information about a guild.",
            "method": "GET",
            "route": "/dashboard/guilds/guild",
            "params": {
                "guild": "ID of the guild"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/guilds/member.js",
            "description": "Gets members of a guild.",
            "method": "GET",
            "route": "/dashboard/guilds/member",
            "params": {
                "guild": "ID of the guild"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/guilds/roles.js",
            "description": "Gets roles of a guild.",
            "method": "GET",
            "route": "/dashboard/guilds/roles",
            "params": {
                "guild": "ID of the guild"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/logs/channel.js",
            "description": "Gets logs for a channel in a guild.",
            "method": "GET",
            "route": "/dashboard/logs/channel",
            "params": {
                "guild": "ID of the guild",
                "channel": "ID of the channel"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/logs/state.js",
            "description": "Gets the state of logs for an event in a guild.",
            "method": "GET",
            "route": "/dashboard/logs/state",
            "params": {
                "guild": "ID of the guild",
                "event": "Name of the event"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/roles/fetch.js",
            "description": "Fetches a role by ID.",
            "method": "GET",
            "route": "/dashboard/roles/fetch",
            "params": {
                "role": "ID of the role",
                "guild": "ID of the guild"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/social/read.js",
            "description": "Reads social data for a user.",
            "method": "GET",
            "route": "/dashboard/social/read",
            "params": {
                "plat": "Social platform",
                "discordId": "Discord ID of the user"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/test/bearer.js",
            "description": "Tests the bearer authentication.",
            "method": "GET",
            "route": "/dashboard/test/bearer",
            "params": {},
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/users/user.js",
            "description": "Gets information about a user.",
            "method": "GET",
            "route": "/dashboard/users/user",
            "params": {
                "id": "ID of the user"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/get/xp/user.js",
            "description": "Gets the XP for a user in a guild.",
            "method": "GET",
            "route": "/dashboard/xp/user",
            "params": {
                "guild": "ID of the guild",
                "id": "ID of the user"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/post/autorole/add.js",
            "description": "Adds an autorole to a guild.",
            "method": "POST",
            "route": "/dashboard/autorole/add",
            "params": {
                "guild": "ID of the guild",
                "role": "ID of the role to add"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/dashboard/post/config/create.js",
            "description": "Creates a new configuration for a guild.",
            "method": "POST",
            "route": "/dashboard/config/create",
            "params": {
                "guild": "ID of the guild",
                "category": "Category of the configuration",
                "value": "Value of the configuration"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/dashboard/post/config/modify.js",
            "description": "Modifies the configuration for a guild.",
            "method": "POST",
            "route": "/dashboard/config/modify",
            "params": {
                "guild": "ID of the guild",
                "category": "Category of the configuration",
                "value": "New value of the configuration"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/dashboard/post/database/write.js",
            "description": "Writes a new database entry for a guild.",
            "method": "POST",
            "route": "/dashboard/database/write",
            "params": {
                "guild": "ID of the guild",
                "file": "File to write"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/dashboard/post/events/create.js",
            "description": "Creates a new event.",
            "method": "POST",
            "route": "/dashboard/events/create",
            "params": {
                "guild": "ID of the guild",
                "event": "Name of the event"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/dashboard/post/events/toggle.js",
            "description": "Toggles an event for a guild.",
            "method": "POST",
            "route": "/dashboard/events/toggle",
            "params": {
                "guild": "ID of the guild",
                "event": "ID of the event"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/dashboard/post/events/variables.js",
            "description": "Sets or creates variables for an event in a guild.",
            "method": "POST",
            "route": "/dashboard/events/variables",
            "params": {
                "scope": "ID of the event or \"global\" for global variables",
                "name": "The name of the variable to set"
            },
            "body": {
                "data":"Data to write"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/dashboard/post/events/write.js",
            "description": "Writes data to an event for a guild.",
            "method": "POST",
            "route": "/dashboard/events/write",
            "params": {
                "guild": "ID of the guild",
                "event": "ID of the event",
                "data": "Data to write"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/dashboard/post/images/create.js",
            "description": "Creates a new image for a guild.",
            "method": "POST",
            "route": "/dashboard/images/create",
            "params": {
                "guild": "ID of the guild",
                "image": "Image file to create"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/dashboard/post/messages/create.js",
            "description": "Creates a new message for a guild.",
            "method": "POST",
            "route": "/dashboard/messages/create",
            "params": {
                "guild": "ID of the guild",
                "message": "Message content"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/dashboard/post/xp/reward.js",
            "description": "Adds an XP reward to a guild.",
            "method": "POST",
            "route": "/dashboard/xp/reward",
            "params": {
                "guild": "ID of the guild",
                "reward": "ID of the reward to add"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/dashboard/post/xp/set.js",
            "description": "Sets the XP for a user in a guild.",
            "method": "POST",
            "route": "/dashboard/xp/set",
            "params": {
                "guild": "ID of the guild",
                "id": "ID of the user",
                "xp": "Amount of XP to set"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/get/api/release.js",
            "description": "Gets the current API release version.",
            "method": "GET",
            "route": "/get/api/release",
            "params": {},
            "restricted": false,
            "sort": 0
        },
        {
            "path": "routes/get/bot/stats.js",
            "description": "Gets the bot statistics.",
            "method": "GET",
            "route": "/get/bot/stats",
            "params": {},
            "restricted": false,
            "sort": 0
        },
        {
            "path": "routes/get/files/md.js",
            "description": "Gets markdown files for a guild.",
            "method": "GET",
            "route": "/get/files/md",
            "params": {
                "guild": "ID of the guild",
                "file": "File to get"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/get/general/serverAmount.js",
            "description": "Gets the number of servers the bot is in.",
            "method": "GET",
            "route": "/get/general/serverAmount",
            "params": {},
            "restricted": false,
            "sort": 0
        },
        {
            "path": "routes/get/guilds/all.js",
            "description": "Gets all guilds the bot is in.",
            "method": "GET",
            "route": "/get/guilds/all",
            "params": {},
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/get/guilds/lookup.js",
            "description": "Looks up a guild by ID.",
            "method": "GET",
            "route": "/get/guilds/lookup",
            "params": {
                "id": "ID of the guild"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/get/guilds/mutual.js",
            "description": "Gets mutual guilds between the bot and a user.",
            "method": "GET",
            "route": "/get/guilds/mutual",
            "params": {
                "id": "ID of the user"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/get/status/uptime.js",
            "description": "Gets the uptime of the bot.",
            "method": "GET",
            "route": "/get/status/uptime",
            "params": {},
            "restricted": false,
            "sort": 0
        },
        {
            "path": "routes/get/test/ping.js",
            "description": "Pings the server.",
            "method": "GET",
            "route": "/get/test/ping",
            "params": {},
            "restricted": false,
            "sort": 0
        },
        {
            "path": "routes/get/users/login.js",
            "description": "Gets login information for a user.",
            "method": "GET",
            "route": "/get/users/login",
            "params": {
                "id": "ID of the user"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/post/api/error.js",
            "description": "Logs an error to the API.",
            "method": "POST",
            "route": "/post/api/error",
            "params": {
                "message": "Error message to log"
            },
            "restricted": false,
            "sort": 1
        },
        {
            "path": "routes/post/api/restart.js",
            "description": "Restarts the API.",
            "method": "POST",
            "route": "/post/api/restart",
            "params": {},
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/post/api/update.js",
            "description": "Updates the API to a new version.",
            "method": "POST",
            "route": "/post/api/update",
            "params": {
                "version": "Version to update to"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/post/auth/push.js",
            "description": "Pushes authentication data for a user.",
            "method": "POST",
            "route": "/post/auth/push",
            "params": {
                "user": "ID of the user",
                "auth": "Authentication data to push"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/post/test/ping.js",
            "description": "Pings the test server.",
            "method": "POST",
            "route": "/post/test/ping",
            "params": {},
            "restricted": false,
            "sort": 1
        },
        {
            "path": "routes/render/transcript.js",
            "description": "Renders a transcript for a guild.",
            "method": "POST",
            "route": "/render/transcript",
            "params": {
                "guild": "ID of the guild",
                "channel": "ID of the channel",
                "file": "Transcript file"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/dashboard/post/xp/amount.js",
            "description": "Gets the XP amount for a user in a guild.",
            "method": "POST",
            "route": "/dashboard/xp/amount",
            "params": {
                "guild": "ID of the guild",
                "id": "ID of the user"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/dashboard/get/xp/rewards.js",
            "description": "Gets the XP rewards for a guild.",
            "method": "GET",
            "route": "/dashboard/xp/rewards",
            "params": {
                "guild": "ID of the guild"
            },
            "restricted": true,
            "sort": 0
        },
        {
            "path": "routes/dashboard/post/database/write.js",
            "description": "Writes a file in the managed database of the guild.",
            "method": "POST",
            "route": "/dashboard/database/write",
            "params": {
                "guild": "ID of the guild",
                "body": "JSON - path: Path to the file, data: Content to write inside"
            },
            "restricted": true,
            "sort": 1
        },
        {
            "path": "routes/dashboard/post/xp/rewards.js",
            "description": "Sets XP rewards for a guild.",
            "method": "POST",
            "route": "/dashboard/xp/rewards",
            "params": {
                "guild": "ID of the guild",
                "rewards": "XP reward settings"
            },
            "restricted": true,
            "sort": 1
        }
    ]
}
